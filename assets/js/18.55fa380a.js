(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{345:function(s,t,n){"use strict";n.r(t);var a=n(4),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("本文代码基于 go1.17.13，sync/once.go")])]),s._v(" "),t("h2",{attrs:{id:"一、简述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、简述"}},[s._v("#")]),s._v(" 一、简述")]),s._v(" "),t("ul",[t("li",[s._v("保证某段代码在程序执行期间只执行一次；")]),s._v(" "),t("li",[s._v("常用于服务启动时的配置初始化操作；")])]),s._v(" "),t("h2",{attrs:{id:"二、基本原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、基本原理"}},[s._v("#")]),s._v(" 二、基本原理")]),s._v(" "),t("ul",[t("li",[s._v("通过原子计数和互斥锁的方式，记录函数 f 执行的次数，当计数为 0 时，加锁、计数并执行函数 f，"),t("span",{staticStyle:{color:"red"}},[s._v("**即使函数 f panic 了也只会执行一次")]),s._v("；")]),s._v(" "),t("li",[t("span",{staticStyle:{color:"red"}},[s._v("Once 首次使用后不允许被复制；")])])]),s._v(" "),t("h2",{attrs:{id:"三、基本用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、基本用法"}},[s._v("#")]),s._v(" 三、基本用法")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sync"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("initConfig")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" one sync"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Once\n\tone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Do")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("initConfig"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])]),s._v(" "),t("ul",[t("li",[s._v("该函数只能作为参数传递给"),t("code",[s._v("Do")]),s._v("函数才能保证只会被执行一次，如果是在其他地方继续调用则无法保证；")]),s._v(" "),t("li",[s._v("即使多次执行"),t("code",[s._v("one.Do(initConfig)")]),s._v("操作，该函数也只会被执行一次；")])]),s._v(" "),t("h2",{attrs:{id:"四、源码解读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、源码解读"}},[s._v("#")]),s._v(" 四、源码解读")]),s._v(" "),t("h3",{attrs:{id:"_1-once"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-once"}},[s._v("#")]),s._v(" 1, Once")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Once 是一个对象，它将只执行一个操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Once "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// done 表示是否已执行操作。")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为它在热路径中使用，热路径在每个呼叫站点上都内联。")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 done 放在第一位允许在某些架构 （amd64386） 上更紧凑的指令，而在其他架构上更少的指令（用于计算偏移）。")]),s._v("\n\tdone "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("\n\tm    Mutex\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("done")]),s._v("原子计数，记录函数 f 执行的次数，它在结构中排在第一位，整个结构体变量的地址也就是该字段的地址，无需地址偏移就可以获取该字段的值；")]),s._v(" "),t("li",[t("code",[s._v("m")]),s._v(" 互斥锁，在计数和执行 f 函数时被调用；")])]),s._v(" "),t("h3",{attrs:{id:"_2-do"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-do"}},[s._v("#")]),s._v(" 2, Do")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("点击查看")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do 当且仅当 Do 是首次为 Once 实例调用 Do 时，Do 才会调用函数 f。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 换句话说，给定 var once Once，如果 once.Do(f) 被多次调用，只有第一次调用才会调用 f，即使 f 在每次调用中都有不同的值。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每个函数都需要一个新的 Once 实例才能执行。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do 用于必须只运行一次的初始化。config.once.Do（func（） { config.init（filename） }）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为在对 f 的一次调用返回之前，对 Do 的调用不会返回，所以如果 f 导致调用 Do，它将死锁。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 f panic，Do 认为它已经返回了，未来再调用 Do 时将直接用返回而不调用 f。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Once"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Do")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：这是 Do 的错误实现:")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\tif atomic.CompareAndSwapUint32(&o.done, 0, 1) {")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t\tf()")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Do 保证当它返回时，f 已经完成。")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此实现不会实现该保证：给定两个同时调用，cas 的获胜者将调用 f，第二个将立即返回，而无需等待第一个调用完成，此时 f 还没有完成。")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这就是为什么慢速路径回落到互斥锁的原因，互斥锁能让第二个阻塞等待，获得锁后发现已经执行完再立即返回，")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以及为什么 atomic.StoreUint32 必须延迟到 f 返回之后，保证先执行 f 再执行原子操作，只要 f 执行了，无论是否 panic 都执行 原子操作。")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" atomic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("LoadUint32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 概述了慢速路径，以允许快速路径的内联。")]),s._v("\n\t\to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSlow")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Once"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSlow")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" atomic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("StoreUint32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即使 f panic 该 defer 也能执行成功，后续 Do 将不会再调用 f")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])])]),s._v(" "),t("ul",[t("li",[s._v("采用原子操作判断"),t("code",[s._v("done")]),s._v("是否为 0，不为 0 则说明已经执行过 f 直接返回；")]),s._v(" "),t("li",[s._v("为 0 则说明还没执行 f，转入慢路径执行；")]),s._v(" "),t("li",[s._v("慢路径执行时，先加锁，再次判断"),t("code",[s._v("done")]),s._v("是否为 0，避免再加锁期间 f 被其他 goroutine 执行完成；")]),s._v(" "),t("li",[s._v("采用 defer 函数使"),t("code",[s._v("done")]),s._v("原子加一，再执行 f 函数，即使函数 f panic 了，"),t("code",[s._v("done")]),s._v(" 的加一操作也能执行成功；")]),s._v(" "),t("li",[t("span",{staticStyle:{color:"red"}},[t("strong",[s._v("采用互斥锁而不是 cas 的原因是保证"),t("code",[s._v("Done")]),s._v("返回时，函数 f 一定是执行完成的")])]),s._v("；\n"),t("ul",[t("li",[t("span",{staticStyle:{color:"red"}},[t("strong",[s._v("互斥锁能够让其他 goroutine 阻塞等待，阻塞结束后 f 一定是执行完成的")])]),s._v("；")]),s._v(" "),t("li",[s._v("其他 goroutine 通过 cas 获取不到值时，则是直接返回，此时 f 可能还没有执行完成；")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);